import React, {Component} from 'react';
import Layout from '../../../components/layout';
import { Card, Grid, Button, Table } from 'semantic-ui-react';
import { Link } from '../../../routes';
import Campaign from '../../../ethereum/campaign';
import RequestRow from '../../../components/requestRow';

class RequestIndex extends Component {
	static async getInitialProps(props) {
		const { address } = props.query;
		const campaign = Campaign(address);
		const requestCount =  await campaign.methods.getRequestsCount().call();
		const contributors = await campaign.methods.approversCount().call();

		const requests = await Promise.all(
			Array(parseInt(requestCount)).fill().map((element, index) => {
				return campaign.methods.requests(index).call()
			})

		);
		console.log(requests);
		
		return { address, requests, requestCount, contributors }
	}


	renderRow() {
		return this.props.requests.map((request, index) => {
			return (
				<RequestRow 
				key={index}
				id={index}
				request={request}
				address={this.props.address}
				contributors = {this.props.contributors}
				/>
			);
		});
	}

	render() {
		const { Header, Row, HeaderCell, Body} = Table;


		return(
			<Layout>
				<h2>  Pending Requests  </h2>
						<Link route={`/campaigns/${this.props.address}/requests/new`}>
							<a>
								<Button primary floated="right" style={{ marginBottom: 10}}> Add Request </Button>
							</a>
						</Link>
					 
				<Table>
					<Header> 
						<Row>
							<HeaderCell> ID </HeaderCell>
							<HeaderCell> Description </HeaderCell>
							<HeaderCell> Amount </HeaderCell>
							<HeaderCell> Recipient </HeaderCell>
							<HeaderCell> Approval Count </HeaderCell>
							<HeaderCell> Approve </HeaderCell>
							<HeaderCell> Finalize </HeaderCell>
						</Row>
					</Header>
					<Body>{this.renderRow()}
					</Body>
				</Table>
				<div> <h4>Found {this.props.requestCount} requests </h4></div>
			</Layout>
		);
	}
}

export default RequestIndex;
